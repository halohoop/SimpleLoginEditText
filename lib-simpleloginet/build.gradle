apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: 'https://raw.githubusercontent.com/sky-uk/gradle-maven-plugin/master/gradle-mavenizer.gradle'

// This is the library version used when deploying the artifact
def version0 = "1.0.rc04"
def versionCode0 = 1
def siteUrl = 'https://github.com/halohoop/SimpleLoginEditText'      // Homepage URL of the library
def group = "com.halohoop"                                          // Maven Group ID for the artifact
def artId = "simpleloginet"                                          // Maven Artifact ID for the artifact
def description = "SimpleLoginEditText ${version0} final"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
        versionCode versionCode0
        versionName version0

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
//    implementation 'androidx.core:core-ktx:1.2.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

project.ext {
    mavDevelopers = ["Halohoop":"Halohoop Wong"]
    mavSiteUrl = siteUrl
    mavGitUrl = "${siteUrl}.git"
    mavProjectName = rootProject.name
//    mavPublishToInternalRepo = true
//    mavRepoInternalUrl = "path/to/internal/repo"
    mavLibraryLicenses = ["Apache-2.0":'http://www.apache.org/licenses/LICENSE-2.0.txt']
    mavLibraryDescription = description
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
    archiveClassifier.set("sources")
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
    inputs.dir "src/main/java"
}

//task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
//    archiveClassifier.set('javadoc')
//    from androidJavadocs.destinationDir
//}

//task javadocJar(type: Jar, dependsOn: javadoc) {
task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    from "$buildDir/javadoc"
//    classifier = 'javadoc'
    archiveClassifier.set("javadoc")
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = 'halohoop'
    //./gradlew -PapiKey="blablablablablablabla"
    key = "${project.hasProperty('apiKey') ? project.apiKey : ""}"
    override = true
    publish = true
    pkg {
        repo = 'maven'
        name = rootProject.name
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = "${siteUrl}.git"
        issueTrackerUrl = "${siteUrl}/issues"
        version {
            name = version0
            desc = "SimpleLoginEditText ${version0} final"
            released = new Date()
            vcsTag = version0
//            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
    //https://github.com/bintray/bintray-examples/tree/master/gradle-bintray-plugin-examples/publications-example
    publications = ['MyPublication']
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            artifact "${buildDir}/outputs/aar/lib-simpleloginet-release.aar"
//            artifact "${buildDir}/libs/lib-simpleloginet-javadoc.jar"//文件的话不能够直接几个不同后缀名的一起上传
//            artifact "${buildDir}/libs/lib-simpleloginet-sources.jar"//文件的话不能够直接几个不同后缀名的一起上传
            artifact(sourcesJar)
            artifact(javadocJar)
            groupId group
            artifactId artId
            version version0
        }
//        repositories {
//            maven {
//                url "$buildDir/repo"
//            }
//        }
    }
}
